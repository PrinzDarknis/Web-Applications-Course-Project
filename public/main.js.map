{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/services/post.service.ts","./src/app/components/page-not-found/page-not-found.component.ts","./src/app/components/page-not-found/page-not-found.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/guards/auth.guard.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/post/post.component.ts","./src/app/components/post/post.component.html","./src/app/app.module.ts","./src/app/components/new-post/new-post.component.ts","./src/app/components/new-post/new-post.component.html","./src/app/components/posts/posts.component.ts","./src/app/components/posts/posts.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/user.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 class=\"page-header\">The MicroBloger</h2>\n<app-new-post></app-new-post>\n<app-posts></app-posts>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { UserService } from '../../services/user.service';\nimport { User } from '../../models';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css'],\n})\nexport class ProfileComponent implements OnInit {\n  user: User;\n\n  constructor(\n    private userService: UserService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    let id = this.route.snapshot.paramMap.get('id');\n    this.userService.getUserData(id).subscribe((data) => {\n      if (data.success) this.user = data.result;\n    });\n  }\n}\n","<div *ngIf=\"user\">\n  <h2 class=\"page-header\">{{ user.name }}</h2>\n  <ul class=\"list-group\">\n    <li class=\"list-group-item\">Username: {{ user.username }}</li>\n    <li *ngIf=\"user.email\" class=\"list-group-item\">Email: {{ user.email }}</li>\n    <li *ngIf=\"user.privacy\" class=\"list-group-item\">\n      Privacy: {{ user.privacy }}\n    </li>\n  </ul>\n  <app-posts author=\"{{ user.id }}\"></app-posts>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\n\nimport {\n  GetPostResponse,\n  GetPostsResponse,\n  Post,\n  WriteCommentResponse,\n  WritePostResponse,\n} from '../models';\nimport { UserService } from './user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostService {\n  private posts: Post[];\n  private authorPosts: Post[];\n  private selectedPost: Post;\n\n  private postsObserverCallbacks = [];\n\n  constructor(private userService: UserService, private http: HttpClient) {}\n\n  newPostsSubscipe(callback) {\n    this.postsObserverCallbacks.push(callback);\n  }\n  newPostsUnsubscipe(callback) {\n    let index = this.postsObserverCallbacks.indexOf(callback);\n    if (index >= 0) this.postsObserverCallbacks.splice(index, 1);\n  }\n\n  notifyObserver() {\n    this.postsObserverCallbacks.forEach((callback) => {\n      callback(this.posts);\n    });\n  }\n\n  getPosts(): Observable<GetPostsResponse> {\n    if (this.posts && this.posts.length > 0) return this.updatePosts();\n    else {\n      // Load All\n      let obs: Observable<GetPostsResponse> = this.http\n        .get<GetPostsResponse>(\n          `${this.userService.apiServer}/api/posts`,\n          this.userService.httpOptions\n        )\n        .pipe(catchError(this.errorHandler));\n\n      obs.subscribe((response) => {\n        this.posts = response.result;\n        this.notifyObserver();\n      });\n      return obs;\n    }\n  }\n\n  updatePosts(): Observable<GetPostsResponse> {\n    // TODO Cache Load (current no Cache)\n    let obs: Observable<GetPostsResponse> = this.http\n      .get<GetPostsResponse>(\n        `${this.userService.apiServer}/api/posts`,\n        this.userService.httpOptions\n      )\n      .pipe(catchError(this.errorHandler));\n\n    obs.subscribe((response) => {\n      this.posts = response.result;\n      this.notifyObserver();\n    });\n    return obs;\n  }\n\n  getAuthorPosts(authorID: string): Observable<GetPostsResponse> {\n    console.log(`${this.userService.apiServer}/api/posts?author=${authorID}`);\n\n    let obs = this.http\n      .get<GetPostsResponse>(\n        `${this.userService.apiServer}/api/posts?author=${authorID}`,\n        this.userService.httpOptions\n      )\n      .pipe(catchError(this.errorHandler));\n\n    obs.subscribe((response) => {\n      this.authorPosts = response.result;\n    });\n    return obs;\n  }\n\n  selectPost(index: number, isAuthorPost: boolean) {\n    if (isAuthorPost) this.selectedPost = this.authorPosts[index];\n    else this.selectedPost = this.posts[index];\n  }\n\n  getPost(id: string): Observable<GetPostResponse> {\n    // TODO selectedPost (cache)\n    // if (this.selectedPost && id == this.selectedPost._id) {\n    //   return this.selectedPost;\n    // }\n\n    let obs = this.http\n      .get<GetPostResponse>(\n        `${this.userService.apiServer}/api/posts/${id}`,\n        this.userService.httpOptions\n      )\n      .pipe(catchError(this.errorHandler));\n\n    return obs;\n  }\n\n  writePost(\n    title: string,\n    text: string,\n    image: File,\n    callback: (response: WritePostResponse) => any\n  ): void {\n    // Payload\n    let formData: FormData = new FormData();\n    formData.append('title', title);\n    formData.append('text', text);\n\n    if (image) {\n      formData.append('image', image, image.name);\n    }\n\n    // define Post Callback\n    this.http\n      .post<WritePostResponse>(\n        `${this.userService.apiServer}/api/posts`,\n        formData,\n        this.userService.httpOptionsOnlyAuth\n      )\n      .pipe(catchError(this.errorHandler))\n      .subscribe(callback);\n  }\n\n  writeComment(postID: string, text: string): Observable<WriteCommentResponse> {\n    return this.http\n      .post<GetPostResponse>(\n        `${this.userService.apiServer}/api/posts/${postID}/comment`,\n        { text },\n        this.userService.httpOptions\n      )\n      .pipe(catchError(this.errorHandler));\n  }\n\n  // Extract Body on Error\n  private errorHandler(err) {\n    console.log(err);\n    return of(err.error);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>404 - Page not found</h1>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'myProject';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <flash-messages class=\"fixed\"></flash-messages>\n  <router-outlet></router-outlet>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { from } from 'rxjs';\r\n\r\nimport { UserService } from '../services/user.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private userService: UserService, private router: Router) {}\r\n\r\n  canActivate() {\r\n    if (this.userService.loggedIn()) return true;\r\n    else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  username: string;\n  password: string;\n\n  constructor(\n    private flashMessage: FlashMessagesService,\n    private userService: UserService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  onLoginSubmit() {\n    // Check\n    if (!this.username || !this.password) {\n      this.flashMessage.show('Please insert Username and Password', {\n        cssClass: 'alert-danger',\n        timeout: 3000,\n      });\n      return;\n    }\n\n    // Login\n    this.userService\n      .loginUser(this.username, this.password)\n      .subscribe((data) => {\n        if (data.success) {\n          this.flashMessage.show('You are now logged in', {\n            cssClass: 'alert-success',\n            timeout: 5000,\n          });\n          this.router.navigate(['profile']);\n        } else {\n          this.flashMessage.show(\n            data.msg || 'unforeseen error, please contact admin',\n            {\n              cssClass: 'alert-danger',\n              timeout: 5000,\n            }\n          );\n          this.router.navigate(['login']);\n        }\n      });\n  }\n}\n","<h2 class=\"page-header\">Login</h2>\n<form (submit)=\"onLoginSubmit()\">\n  <div class=\"form-group\">\n    <label>Username</label>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      [(ngModel)]=\"username\"\n      name=\"username\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <label>Password</label>\n    <input\n      type=\"password\"\n      class=\"form-control\"\n      [(ngModel)]=\"password\"\n      name=\"password\"\n    />\n  </div>\n  <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\" />\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\nimport { UserService } from '../../services/user.service';\nimport { User_Register } from '../../models';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent implements OnInit {\n  user: User_Register = {\n    name: '',\n    username: '',\n    email: '',\n    password: '',\n  };\n\n  constructor(\n    private flashMessage: FlashMessagesService,\n    private userService: UserService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  onRegisterSubmit() {\n    // Trim\n    this.user.name = this.user.name.trim();\n    this.user.username = this.user.username.trim();\n    this.user.email = this.user.email.trim();\n\n    let errors = 'Invalide Input:\\n';\n    // Check Name\n    if (this.user.name.length < 1) {\n      errors += 'Please insert Name.\\n';\n    }\n\n    // Check Username\n    if (this.user.username.length < 3) {\n      errors += 'The Username must contain min. 3 Characters.\\n';\n    }\n\n    // Check Password\n    if (this.user.password.length < 3) {\n      errors += 'The Password must contain min. 3 Characters.\\n';\n    }\n\n    // Check Email\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (!re.test(this.user.email.toLowerCase())) {\n      errors += 'Please insert valide Email.\\n';\n    }\n\n    // Error Output\n    if (errors.localeCompare('Invalide Input:\\n') != 0) {\n      this.flashMessage.show(errors, {\n        cssClass: 'alert-danger',\n        timeout: 5000,\n      });\n      return false;\n    }\n\n    // Register User\n    this.userService.registerUser(this.user).subscribe((data) => {\n      if (data.success) {\n        this.flashMessage.show('You are now registered and can log in', {\n          cssClass: 'alert-success',\n          timeout: 3000,\n        });\n        this.router.navigate(['/login']);\n      } else {\n        this.flashMessage.show(data.msg || 'Something went wrong', {\n          cssClass: 'alert-danger',\n          timeout: 3000,\n        });\n        this.router.navigate(['/register']);\n      }\n    });\n  }\n}\n","<h2 class=\"page-header\">Register</h2>\n<form (submit)=\"onRegisterSubmit()\">\n  <div class=\"form-group\">\n    <label>Name</label>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      [(ngModel)]=\"user.name\"\n      name=\"name\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <label>Username</label>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      [(ngModel)]=\"user.username\"\n      name=\"username\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <label>Email</label>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      [(ngModel)]=\"user.email\"\n      name=\"email\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <label>Password</label>\n    <input\n      type=\"password\"\n      class=\"form-control\"\n      [(ngModel)]=\"user.password\"\n      name=\"password\"\n    />\n  </div>\n  <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\" />\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Location } from '@angular/common';\n\nimport { Post } from 'src/app/models';\nimport { PostService } from 'src/app/services/post.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css'],\n})\nexport class PostComponent implements OnInit {\n  post: Post;\n  commentText: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private location: Location,\n    private flashMessage: FlashMessagesService,\n    private postService: PostService,\n    public userService: UserService\n  ) {}\n\n  ngOnInit(): void {\n    let id = this.route.snapshot.paramMap.get('id');\n    this.postService.getPost(id).subscribe((response) => {\n      if (!response.success) {\n        this.flashMessage.show(\n          `Couldn't load Post: ${response.msg || 'Something went wrong'}`,\n          {\n            cssClass: 'alert-danger',\n            timeout: 3000,\n          }\n        );\n        this.location.back();\n        return;\n      }\n\n      this.post = response.result;\n    });\n  }\n\n  writeComment() {\n    this.commentText = this.commentText.trim();\n    if (this.commentText.length > 0) {\n      this.postService\n        .writeComment(this.post._id, this.commentText)\n        .subscribe((response) => {\n          if (response.success) {\n            this.post.comments.unshift(response.result);\n          } else {\n            this.flashMessage.show(\n              `Couldn't post Comment: ${\n                response.msg || 'Something went wrong'\n              }`,\n              {\n                cssClass: 'alert-danger',\n                timeout: 3000,\n              }\n            );\n          }\n        });\n    }\n  }\n}\n","<div *ngIf=\"post\">\n  <h2 class=\"page-header\">{{ post.title }}</h2>\n  by\n  <a routerLink=\"/user/{{ post.author._id }}\">{{ post.author.username }}</a>\n  <br />\n  <img\n    *ngIf=\"post.image\"\n    class=\"img-fluid\"\n    src=\"{{ userService.apiServer }}/api/posts/{{ post._id }}/image?size=small\"\n    alt=\"Post Image\"\n  />\n  <br />\n  <h5>\n    <div>{{ post.text }}</div>\n\n    <br /><br />\n    <!-- Write Comments -->\n    <div *ngIf=\"userService.loggedIn()\">\n      <fieldset>\n        <legend>Write a Comment</legend>\n        <div class=\"form-group\">\n          <textarea\n            cols=\"30\"\n            rows=\"5\"\n            maxlength=\"150\"\n            class=\"form-control\"\n            [(ngModel)]=\"commentText\"\n            name=\"commentText\"\n          ></textarea>\n        </div>\n        <span\n          _ngcontent-toe-c33=\"\"\n          type=\"submit\"\n          class=\"badge btn-primary\"\n          (click)=\"writeComment()\"\n        >\n          Post\n        </span>\n      </fieldset>\n    </div>\n\n    <!-- Comments -->\n    <br />\n    <ul class=\"list-group\">\n      <li *ngFor=\"let comment of post.comments\" class=\"list-group-item\">\n        <a routerLink=\"/user/{{ comment.author._id }}\">{{\n          comment.author.username\n        }}</a>\n        <br />\n        {{ comment.text }}\n      </li>\n    </ul>\n  </h5>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { RegisterComponent } from './components/register/register.component';\n\nimport { UserService } from './services/user.service';\nimport { PostService } from './services/post.service';\nimport { AuthGuard } from './guards/auth.guard';\nimport { PostsComponent } from './components/posts/posts.component';\nimport { NewPostComponent } from './components/new-post/new-post.component';\nimport { PostComponent } from './components/post/post.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    LoginComponent,\n    ProfileComponent,\n    RegisterComponent,\n    PostsComponent,\n    NewPostComponent,\n    PostComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FlashMessagesModule.forRoot(),\n  ],\n  providers: [UserService, PostService, AuthGuard],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { PostService } from 'src/app/services/post.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-new-post',\n  templateUrl: './new-post.component.html',\n  styleUrls: ['./new-post.component.css'],\n})\nexport class NewPostComponent implements OnInit {\n  title: string;\n  text: string;\n  image: File;\n\n  constructor(\n    private flashMessage: FlashMessagesService,\n    private postService: PostService,\n    private router: Router,\n    public userService: UserService\n  ) {}\n\n  ngOnInit(): void {}\n\n  fileChanged(files: FileList) {\n    this.image = files.item(0);\n  }\n\n  writePost() {\n    this.title = this.title.trim();\n    this.text = this.text.trim();\n\n    if (this.title.length >= 1 && this.text.length >= 3) {\n      this.postService.writePost(\n        this.title,\n        this.text,\n        this.image,\n        (response) => {\n          if (response.success) {\n            this.title = '';\n            this.text = '';\n\n            this.flashMessage.show(`Post posted`, {\n              cssClass: 'alert-success',\n              timeout: 3000,\n            });\n\n            this.postService.updatePosts().subscribe((response) => {});\n          } else {\n            this.flashMessage.show(\n              `Couldn't post: ${response.msg || 'Something went wrong'}`,\n              {\n                cssClass: 'alert-danger',\n                timeout: 3000,\n              }\n            );\n          }\n        }\n      );\n    }\n  }\n}\n","<fieldset *ngIf=\"userService.loggedIn()\">\n  <legend>New Post</legend>\n  <div class=\"form-group\">\n    <label>Title</label>\n    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"title\" name=\"title\" />\n  </div>\n  <div class=\"form-group\">\n    <label>Image</label>\n    <input type=\"file\" (change)=\"fileChanged($event.target.files)\" />\n  </div>\n  <div class=\"form-group\">\n    <label>Text</label>\n    <textarea\n      cols=\"30\"\n      rows=\"5\"\n      maxlength=\"150\"\n      class=\"form-control\"\n      [(ngModel)]=\"text\"\n      name=\"text\"\n    ></textarea>\n  </div>\n  <h4>\n    <span\n      _ngcontent-toe-c33=\"\"\n      type=\"submit\"\n      class=\"badge btn-primary\"\n      (click)=\"writePost()\"\n    >\n      Post\n    </span>\n  </h4>\n</fieldset>\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Post } from 'src/app/models';\n\nimport { PostService } from '../../services/post.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.css'],\n})\nexport class PostsComponent implements OnInit, OnDestroy {\n  @Input() author?: string;\n\n  posts: Post[];\n  isAuthor: boolean = false;\n\n  constructor(\n    private postService: PostService,\n    private router: Router,\n    private flashMessage: FlashMessagesService,\n    public userService: UserService\n  ) {}\n\n  ngOnInit(): void {\n    let cb = (response) => {\n      if (response.success) {\n        this.posts = response.result;\n        console.log(`[PostsComponent] Show ${this.posts.length} Posts`);\n      } else {\n        this.flashMessage.show(\n          `Couldn't load Posts: ${response.msg || 'Something went wrong'}`,\n          {\n            cssClass: 'alert-danger',\n            timeout: 3000,\n          }\n        );\n      }\n    };\n\n    if (this.author) {\n      // only his Posts\n      this.isAuthor = true;\n      this.postService.getAuthorPosts(this.author).subscribe(cb);\n    } else {\n      // all Posts\n      this.isAuthor = false;\n      this.postService.newPostsSubscipe(this.loadNewPosts.bind(this)); // without bind this will be undefinded\n      this.postService.getPosts().subscribe(cb);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.postService.newPostsUnsubscipe(this.loadNewPosts);\n  }\n\n  public loadNewPosts = function (posts: Post[]) {\n    this.posts = posts;\n  };\n\n  openPost(id: string, index: number) {\n    this.postService.selectPost(index, this.isAuthor);\n\n    this.router.navigate([`posts/${id}`]);\n  }\n}\n","<h3>Posts:</h3>\n<div *ngIf=\"posts\" class=\"row\">\n  <fieldset *ngFor=\"let post of posts; index as i\" class=\"infobox col-md-6\">\n    <legend>\n      <a class=\"deco-none\" (click)=\"openPost(post._id, i)\">{{ post.title }}</a>\n    </legend>\n    <ul class=\"list-group\">\n      <li class=\"list-group-item\" routerLink=\"/user/{{ post.author._id }}\">\n        Author: {{ post.author.username }}\n      </li>\n      <li *ngIf=\"post.image\" class=\"list-group-item myImage\">\n        <img\n          class=\"img-fluid\"\n          src=\"{{ userService.apiServer }}/api/posts/{{\n            post._id\n          }}/image?size=small\"\n          alt=\"Post Image\"\n        />\n      </li>\n      <li class=\"list-group-item\">\n        {{ post.text }}\n      </li>\n    </ul>\n  </fieldset>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n})\nexport class NavbarComponent implements OnInit {\n  constructor(\n    private flashMessage: FlashMessagesService,\n    public userService: UserService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  onLogoutClick() {\n    this.userService.logout();\n    this.flashMessage.show('You are logged out', {\n      cssClass: 'alert-success',\n      timeout: 3000,\n    });\n    this.router.navigate(['/login']);\n    return false;\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">\n  <a class=\"navbar-brand\" routerLink=\"/\">MicroBloger</a>\n  <button\n    class=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#navbarsExampleDefault\"\n    aria-controls=\"navbarsExampleDefault\"\n    aria-expanded=\"false\"\n    aria-label=\"Toggle navigation\"\n  >\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n    <ul class=\"navbar-nav mr-auto\">\n      <!-- <li\n        class=\"nav-item\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n      >\n        <a class=\"nav-link\" routerLink=\"/\">Show New<span></span></a>\n      </li> -->\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"/api\">API<span></span></a>\n      </li>\n    </ul>\n    <ul class=\"navbar-nav ml-auto\">\n      <li\n        *ngIf=\"userService.loggedIn()\"\n        class=\"nav-item\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n      >\n        <a class=\"nav-link\" routerLink=\"/profile\">Profile <span></span></a>\n      </li>\n      <li\n        *ngIf=\"!userService.loggedIn()\"\n        class=\"nav-item\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n      >\n        <a class=\"nav-link\" routerLink=\"/login\">Login <span></span></a>\n      </li>\n      <li\n        *ngIf=\"!userService.loggedIn()\"\n        class=\"nav-item\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n      >\n        <a class=\"nav-link\" routerLink=\"/register\">Register <span></span></a>\n      </li>\n      <li *ngIf=\"userService.loggedIn()\" class=\"nav-item\">\n        <a class=\"nav-link\" (click)=\"onLogoutClick()\">logout <span></span></a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Injectable, isDevMode } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\nimport {\n  User,\n  User_Register,\n  RegisterResponse,\n  GetUserResponse,\n  AuthenticateResponse,\n} from '../models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  authToken: string;\n  user: User;\n\n  apiServer = '';\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n  };\n  httpOptionsOnlyAuth = {};\n  jwtHelper = new JwtHelperService();\n\n  constructor(private http: HttpClient) {\n    if (isDevMode()) {\n      this.apiServer = 'http://localhost'; // in Dev Angular uses own Port\n    }\n\n    this.loadToken();\n  }\n\n  registerUser(user: User_Register): Observable<RegisterResponse> {\n    return this.http\n      .post<RegisterResponse>(\n        `${this.apiServer}/api/users/register`,\n        user,\n        this.httpOptions\n      )\n      .pipe(catchError(this.errorHandler));\n  }\n\n  getUserData(id?: string): Observable<GetUserResponse> {\n    this.loadToken();\n\n    if (!id) id = this.user.id;\n\n    return this.http\n      .get<GetUserResponse>(\n        `${this.apiServer}/api/users/${id}`,\n        this.httpOptions\n      )\n      .pipe(catchError(this.errorHandler));\n  }\n\n  loginUser(\n    username: string,\n    password: string\n  ): Observable<AuthenticateResponse> {\n    return this.http\n      .post<AuthenticateResponse>(\n        `${this.apiServer}/api/users/authenticate`,\n        { username, password },\n        this.httpOptions\n      )\n      .pipe(\n        tap((res) => {\n          // Save Data\n          localStorage.setItem('jwt', res.token);\n          localStorage.setItem('user', JSON.stringify(res.result));\n          this.loadToken();\n        }),\n        catchError(this.errorHandler)\n      );\n  }\n\n  logout(): void {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n    this.httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n    };\n  }\n\n  loggedIn(): boolean {\n    return !this.jwtHelper.isTokenExpired(this.authToken);\n  }\n\n  private loadToken(): void {\n    let token = localStorage.getItem('jwt');\n    this.authToken = token;\n\n    if (this.loggedIn()) {\n      this.httpOptions.headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: this.authToken,\n      });\n\n      this.httpOptionsOnlyAuth = {\n        headers: new HttpHeaders({ Authorization: this.authToken }),\n      };\n    }\n\n    try {\n      let user = localStorage.getItem('user');\n      this.user = JSON.parse(user);\n    } catch {}\n  }\n\n  // Extract Body on Error\n  private errorHandler(err) {\n    console.log(err);\n    return of(err.error);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthGuard } from './guards/auth.guard';\n\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { PostComponent } from './components/post/post.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] },\n  { path: 'user', redirectTo: 'profile', pathMatch: 'full' },\n  { path: 'user/:id', component: ProfileComponent },\n  { path: 'posts', redirectTo: '', pathMatch: 'full' },\n  { path: 'posts/:id', component: PostComponent },\n  { path: 'PageNotFound', component: PageNotFoundComponent },\n  { path: '**', component: PageNotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}